<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.github.rollenholt.application.center.base.dao.ApplicationMapper">

    <select id="findById" parameterType="int" resultType="io.github.rollenholt.application.center.base.model.Application">
        SELECT
        id,
        name,
        code,
        team_id as teamId,
        creator,
        create_time as createTime,
        state,
        email_group as emailGroup
        FROM
        application
        where id = #{value}
    </select>

    <select id="queryByApplicationCode" parameterType="String" resultType="io.github.rollenholt.application.center.base.model.Application">
        SELECT
        id,
        name,
        code,
        team_id as teamId,
        creator,
        create_time as createTime,
        state,
        email_group as emailGroup
        FROM
        application
        where code = #{applicationCode}
    </select>

    <select id="list" resultType="io.github.rollenholt.application.center.base.model.ApplicationVo">
        SELECT
        a.id,
        a.name,
        a.code,
        a.team_id as teamId,
        t.name as teamName,
        a.creator,
        a.create_time as createTime,
        a.state,
        aa.name as stateName,
        a.email_group as emailGroup
        FROM
        application a join team_dict t on a.team_id = t.id
        join application_apply_state_dict aa on aa.id = a.state
    </select>

    <insert id="createApplication" parameterType="io.github.rollenholt.application.center.base.model.Application"
            useGeneratedKeys="true" keyColumn="id" >
        insert into application(
        name,
        code,
        team_id,
        creator,
        create_time,
        state,
        email_group
        ) values (
        #{name},
        #{code},
        #{teamId},
        #{creator},
        #{createTime},
        #{state},
        #{emailGroup}
        )
    </insert>

    <update id="modifyApplication" parameterType="io.github.rollenholt.application.center.base.model.Application">
        update application
        <set>
            <if test="name != null and name != ''">
                name = #{name}
            </if>
            <if test="teamId != 0">
                team_id = #{teamId}
            </if>
            <if test="emailGroup != null and emailGroup != ''">
                email_group = #{emailGroup}
            </if>
        </set>
        where code = #{code}
    </update>

    <update id="approveApply" parameterType="int">
      update application set state = #{state} where code = #{applicationCode}
    </update>
</mapper>